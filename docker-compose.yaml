# version: "3.8"

services:
  express:
    container_name: eazy-dev-express
    build:
      context: .
    volumes:
      - .:/app # Mount the current directory into the container
      - /app/node_modules # Prevent overwriting node_modules
    working_dir: /app # Set the working directory inside the container
    ports:
      - "3333:3333" # Map port 3333 for the application
    env_file: .env # Load environment variables from the .env file
    command: npm run dev # Start the application in development mode
    restart: unless-stopped # Automatically restart if the container stops
    networks:
      - app-network # Connect to the shared network

  nginx:
    container_name: eazy-dev-nginx
    image: nginx:latest # Use the latest NGINX image
    ports:
      - "80:80" # Map port 80 for the NGINX server
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # Link the custom NGINX configuration file
    depends_on:
      - express # Ensure Express service is started before NGINX
    restart: unless-stopped # Automatically restart if the container stops
    networks:
      - app-network # Connect to the shared network

networks:
  app-network:
    driver: bridge # Use a bridge network for service communication


    # environment:
    #   - FRONTEND_HOST=${FRONTEND_HOST}
    #   - BACKEND_HOST=${BACKEND_HOST}
    #   - PORT=${PORT}
    #   - MONGO_URI=${MONGO_URI}
    #   - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
    #   - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
    #   - KEY_OF_ACCESS=${KEY_OF_ACCESS}
    #   - KEY_OF_REFRESH=${KEY_OF_REFRESH}
    #   - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
    #   - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    #   - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
    #   - SESSION_SECRET=${SESSION_SECRET}
    #   - NODE_ENV=${NODE_ENV}
    #   - EMAIL_USER=${EMAIL_USER}
    #   - EMAIL_PASS=${EMAIL_PASS}
    #   - REDIS_PASSWORD=${REDIS_PASSWORD}
    #   - REDIS_HOST=${REDIS_HOST}
    #   - REDIS_PORT=${REDIS_PORT}
    #   - CACHE_KEY_GET_ALL_COURSES=${CACHE_KEY_GET_ALL_COURSES}
    #   - CACHE_KEY_GET_ALL_MENTOR_COURSES=${CACHE_KEY_GET_ALL_MENTOR_COURSES}
    #   - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    #   - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    #   - AWS_REGION=${AWS_REGION}
    #   - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
    #   - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    #   - ADMIN_ID=${ADMIN_ID}
